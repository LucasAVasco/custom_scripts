#!/bin/bash
#
# Create a temporary branch if there are not one. Search for a temporary branch in the remotes and use its names to create the local
# temporary branch. If not found, creates a new one with the name 'tmp.$user_name.autogenerated.doNotUse'
#
# See the './lib/tmp_branch.sh' script for more information

set -e

current_dir=$(realpath -m -- "${BASH_SOURCE[0]}/../")
source "${current_dir}/lib/tmp_branch.sh"

source "$REPO_DIR/libs/tui.sh"

# Local branch name
tmp_branches_name=($(get_local_tmp_branch_name))
tmp_branch="${tmp_branches_name[0]}"

# Creates a temporary branch if there are not one
if [[ "$tmp_branch" != '' ]]; then
	return
fi

# Try to use the same name of a temporary branch in the remote list
tmp_branches_name=($(get_remote_tmp_branch_name))
tmp_branch="${tmp_branches_name[0]}"

# If not found a temporary branch in the remotes, create a new one with a custom name
if [[ "$tmp_branch" == '' ]]; then
	tmp_branch="$automatic_tmp_branch_name"
fi

# Only creates the branch if the user allows, otherwise cancels the script
if [[ $(tui_ask_boolean "Create a temporary branch with the name '$tmp_branch'?" 'n') == 'y' ]]; then
	git branch "$tmp_branch"

else
	echo "No temporary branch created. Aborting..."
	exit 1
fi
