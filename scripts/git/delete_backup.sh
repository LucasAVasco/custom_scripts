#!/bin/bash
#
# Reset all temporary commits of the current backup branch and checkout to the main branch. After this, the backup branch will be deleted.

set -e

# Check if the current commit is a temporary.
#
# Return 'y' if it is a temporary commit, 'n' otherwise.
commit_is_temporary() {
	local current_commit_title=$(git show --oneline --summary | sed -n 1p)

	[[ "$current_commit_title" =~ tmp\(auto-backup\): ]] && echo -n 'y' || echo -n 'n'
}

# Delete the current commit if it is a temporary commit.
delete_temporary_commit() {
	if [[ $(commit_is_temporary) == 'y' ]]; then
		git reset HEAD^1
	else
		return 1 # Not a temporary commit
	fi
}

# The user must be on a temporary branch
current_branch=$(git branch --show-current)
if ! [[ "$current_branch" =~ ^tmp\..*\.autogenerated.doNotUse$ ]]; then
	echo 'You are not on a temporary branch.' 1>&2
	exit 1
fi

# Delete all temporary commits.
while [[ true ]]; do
	if [[ $(commit_is_temporary) == 'y' ]]; then
		delete_temporary_commit
	else
		break
	fi
done

# Checkout to the main branch and delete the temporary branch
git checkout main
git branch --delete "$current_branch"
